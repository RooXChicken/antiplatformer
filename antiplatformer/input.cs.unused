using SFML.System;
using SFML.Window;
using System.Linq;

namespace antiplatformer
{
    public class Input
    {
        private static Vector2f joyPos;
        private static Vector2f keyPos;

        public static float getHorizontal()
        {
            if(joyPos.X > 0.1f || joyPos.X < 0.1f)
            {
                return joyPos.X / 100;
            }
            else
            {
                return keyPos.X;
            }
        }

        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!
        //CURRENTLY UNUSED!!!!

        public static bool isKeyDown(string key)
        {
            if(Keyboard.IsKeyPressed(settings.keys[key]))
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        public static float getVertical()
        {
            if(joyPos.Y > 0.1f || joyPos.Y < 0.1f)
            {
                return joyPos.Y / 100;
            }
            else
            {
                return keyPos.Y;
            }
        }

        public static float getJump()
        {
            if(Joystick.IsButtonPressed(0, 0))
            {
                return 1;
            }
            else
                return keyPos.Y;
        }

        public static void update()
        {
            if (Joystick.IsConnected(0))
            {
                joyPos.X = Joystick.GetAxisPosition(0, Joystick.Axis.X);
                joyPos.Y = Joystick.GetAxisPosition(0, Joystick.Axis.Y);
            }

            if (Keyboard.IsKeyPressed(Keyboard.Key.Left) || Keyboard.IsKeyPressed(Keyboard.Key.A))
            {
                keyPos.X = -1;
            }
            else if (Keyboard.IsKeyPressed(Keyboard.Key.Right) || Keyboard.IsKeyPressed(Keyboard.Key.D))
            {
                keyPos.X = 1;
            }
            else if (Keyboard.IsKeyPressed(Keyboard.Key.Up) || Keyboard.IsKeyPressed(Keyboard.Key.W) || Keyboard.IsKeyPressed(Keyboard.Key.Space))
            {
                keyPos.Y = 1;
            }
            else if (Keyboard.IsKeyPressed(Keyboard.Key.Down) || Keyboard.IsKeyPressed(Keyboard.Key.S))
            {
                keyPos.Y = -1;
            }
        }
    }
}